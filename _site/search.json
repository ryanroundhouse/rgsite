{"search" : [{
    "url" : "/posts/2017/sprint planning-meeting-introductory-script/",
    "title" : "Sprint Planning Meeting Introductory Script",
    "text" : "sprint planning meeting introductory script purpose produce backlog this backlog forecasted work that will completed during sprint way ’ve run meetings evolved over last 4 months really rough start ’s getting better want share what learned been using recently introduction meetings added comments around explaining why say things ’m saying because following good understanding better introduction“hello everyone thank coming meeting”since team 1/3 remote also announce who phone those room who’s phone“this 3 hour with goal discussing issues prioritized product agreeing contents tackling our 2 week sprint” start by mentioning duration everyone understands how long they’re expected concentrate ( they can pace themselves) next thing mention prioritized lead down from top stories deliver highest value are positioned higher list while accept items order ’re open bringing lower list makes sense group them previously accepted commonality then accepting doesn’t change helps transition into piece information“ theme x”’s important apply sprint ’re going communicate team get thinking about whole area help identify any holes wouldn’t necessarily just grab bag potpourri without commonalities keeps mind performing their work able have progress through backlog“ missing x days xw kevin xy leigh xz akshay there anyone taking vacation weeks outside mentioned” scrum hr reports split between myself another department (look know agile says master shouldn’t authority his team bigger fish fry right now) don’t good system tracking each other’s report’s time shared outlook calendar found couple surprise way suggest use “our velocity y prorated full sprints since z% manpower should yw story points” needs supplied appropriate estimate many points manpowerbased point values calculating (# number members – days) / members) velocity now determining range based lowest plan some more complex calculations data under belt discussions post itselfintroduction overtime: overflowthere often overflow kinds overflow: bad overflow pulled once ’ve before end itself hasn’t completed committed part didn’t whatever reason your matures grows confident amount both shrink immensely same reason: gets estimating work expect decent storming norming phases being said regardless got there still need deal even could write lot cause best practices overflow itself“alright overflowing previous first look followed backlog” point expectation set completing these most review like other backlog except keep mental note much already completed remove count growing partiallycompleted counted which order give accurate when averaged sprints",
    "test" : "test"
  },{
    "url" : "/posts/2017/teams-are-greater-than-projects/",
    "title" : "Teams Are Greater Than Projects",
    "text" : "teams are greater than projects post [&amp;quot;sprint planning meeting introductory script&amp;quot;](&amp;quot;/sprint planningmeetingintroductoryscript/indexhtml&amp;quot;) sparked some conversation with old schoolmate facebook justin antoszek he describing his department he’s senior software developer r&amp;amp;d department 3 running different that have several people involved multiple depending which project highest priority from sprint sprint can’t imagine how hectic must track velocity any these team members each being flux sounds like aren’t even given chance develop chemistry revolving door members experience stand gain lot out agile by keeping together letting them chemistry come cooperate instinct feel strongly really get most agile need secure grow protect your team having many jumping one another when pressure rob core ( who don’t shift between teams) developing confidence predictability can continue grow while haven’t had direct experience yet ( protected 2 potential reshuffles 5 months ’ve been together) every source ’ve read talked about loss composition changes ’s often described regressing norming/performing forming/storming starting growth cycle once againwhat would suggest solidify (with couple folks consultants their skill set specialized required all teams expensive otherwise prohibitive crosstrain) change static allow reach further through into norm perform results velocities despite type work key helping move this faster revolves around effective retrospectives harder makeup changes lose only back following sprint trade fixing membership will spreading take example justin’s department dedicated projects could situation where suddenly becomes more important others happened recently sales sold our product said they needed deadline mvp (minimum viable product) since committed decided completed time making progress scrum performing blew teams master working product identified what epics stories handled other analysis because there significant difference technologies used front end require steep learning curve already ate couldn’t afford met built new backlog project were races again chose delay order ensure deadline go extreme this though think just backlog there’s nothing tying stocking items single product said context switch environment setup moving task needs considered ’d well advised clump minimize this push change best value provided should emphasized considered ",
    "test" : "test"
  },{
    "url" : "/posts/2017/political-correctness-vs-politeness/",
    "title" : "Political Correctness vs Politeness",
    "text" : "political correctness vs politeness ’ve become huge fan ‘school life’ youtube channel they make ton 512 minute videos outlining lessons from philosophers artists scientists well tackling general topics such ‘ purpose friendship’ ‘how warm’they also have website called book life ’m their mailing list occasionally send article that interests reason this find great job verbalizing how feel when can’t words myself latest read one entitled vs politeness explores problems some people with offers idea alternativegive read",
    "test" : "test"
  },{
    "url" : "/posts/2017/team-branding/",
    "title" : "Team branding",
    "text" : "team branding one core beliefs with agile that teams are greater than projects can get lot more out by focusing growing your unlocking their full potential done through removing roadblocks continuous improvement retrospectives fostering chemistryone way improve chemistry have shared identity purpose identity relay set values just those outside team importantly inside team find ’s easier come after worked together few months accomplished goals together long been cooperating they should all pretty good idea what each member about responsibility whole decide brand brand anything defines name logo emblem motto this anything gets behind makes own suggest brainstorming activity try tease people’s personalities here some questions use spur conversation:what animals share our attributeswhat kinds words adjectives describe successes any common background elements ’re proud there colour matches want went process past month came name ‘ hive collective’ reason ’ve doing much better job other organization working ton pair programming mob parallelizing work order move individual stories from open closed quickly possible led us discussing bees entities knowledge took while something bought into fun process subsequently designed emblem reveal hexagons tied (hive) center business unit: “ covered” blue most hexagons “northstar blue” company branding orange hexagon related first success team: completing mvp new customer connect web portal important part with all who become provides reminder experiences leads increased chemistry",
    "test" : "test"
  },{
    "url" : "/posts/2017/sprint-planning-how-long-is-too-long/",
    "title" : "Sprint planning - how long is too long?",
    "text" : "sprint planning how long too long posted one articles meeting introductory script reddit try stir some conversations following comment by /u/agilebandit stuck out :3 hours why are your sessions taking long! team would benefit from more frequent backlog grooming reduce need lengthy session – 45 minute should goal understand what he’s getting here fully understands work before session then ’s just selecting items top backlog having quick discussion remind people about entails ’re races main reason that possible spending potential 225 hours throughout while don’t like than hour (more changed area which ’ll focusing) agree with his approach few reasons namely avoid wasted effort share knowledge team leverage experience timing focusing this issue earlier introduces risk effort tasking story ends being deprioritized reach meeting any put past understanding whether knew all information required build proper acceptance criteria thrown windowbacklog involve whole discussions plan subset limit full only those who were present can introduce limiting they’re tied working other stories45 minutes doesn’t seem give enough time amply task stories addition point above lost issue there also using latest experience factor want stories learn previous mistakes successesfrom advice ’ve been reading online mentions 8 monthlong appropriate feel 3 2 week anything ordinary because fact ’m huge fan reducing much possible won’t expect meetings move close minutes",
    "test" : "test"
  },{
    "url" : "/posts/2017/consistency-is-key/",
    "title" : "Consistency is key",
    "text" : "consistency key recently with little notice had step back from work few days (with 3 day flu tail end ) this occurred 4 through 8 10 sprint whole time gone periodically checking emails see everything ok when finally got into 9 found team progressing nicely right where they should there were fires emergency sprint track business usual put some thought how could happen been expecting worst talked members about (after telling them openly just proud ) one said something that led ahhah moment point considering pulling another jira then stopped “well what would ryan he here”then proceeded exactly have done (they worked product owner because blocked proposal dropping out order pull equal number story points top backlog) don’t want unpredictable surprise people getting people understand process stick without supervision consistent think drive comes love strategy games often times can figure optimal situation boil down series steps follow general example used play risk lot (like 24 times week group friends) each game which continent owned biggest stake (either own &amp;gt; 50% card draws territories are split between all other players 30% more than any them) place troops single (assuming border scare anyone else placing their starting same continent) plan path invade will allow take turn defending borders every game always delivered best chance success applies training keep wip (work progress) numbers down purpose stuff less halfdone by also lends itself pair programming knowledge sharing:assuming scrum board columns: ( started) progress (started) (completed) determine doing run following ordered list: item ready testing grab testing subtask start testing otherwise… progressdid mention having difficulty morning go help out someone working alone ( your odd members) issue otherwise…grab highest priority list free programmingthis especially important our transition agile given established consistent list ambiguity everyone knew next being told multiple that’s really post itself) matured chemistry learned together internalized goal trusted make judgement calls diverge made sense whole",
    "test" : "test"
  },{
    "url" : "/posts/2017/retrospective-thoughts–review-the-week/",
    "title" : "Retrospective thoughts - review the week",
    "text" : "retrospective thoughts review week effectiveness our meetings had plateaued last couple sprints despite that couldn’t believe more than second nothing else try order grow been running with agile 9 months weren’t coming many ideas nudge us towards improving processes ’re exhausted distracted why retro ended early because run out things talk aboutsince love geeking interest doing some research into effective meetings found entry ‘agile retrospectives – making good teams great’ by esther derby diana larsen thought ’d try they advised start each meeting having member team speak few words theory goes speaking least once during meeting would likely again continue participate throughout meeting question went ‘describe sprint 3 words ’ after mulled over while one said he can’t even remember what happened sprint which rest echoed thought then brought summary report talked through value delivered how did this kick started everything turned very resulted different adapt current sprint case ’re wondering about could forget just accomplished going add scheduling 2nd day subsequent sprint idea let sink come ready discuss new ideas now ’m seeing should end before next planning meeting everyone flushed their mental buffer already shifted processes they’re working now make change sprint",
    "test" : "test"
  },{
    "url" : "/posts/2017/looking-further-ahead/",
    "title" : "Looking Further Ahead",
    "text" : "looking further ahead around month ago attended full week pmp training office fantastic gave whole lot new tools toolbox helped identify number holes game some get things back trackone tool gained technique track progress against planned progress ’s rather easy ’re using agile can help too assumptions are that have fixed resources ( scrum team) scope ( estimated backlog) time ( date by which need complete backlog) any change these sides iron triange should trigger reassessment other two sidesall calculate earned value (ev) subtract (pv) positive schedule negative behind magnitude this reflects how far unit measurement using let’s try example running project add functionality software suite your product backlog mapped version 250 story points team started working april 2nd deadline october 11th excel find days between dates 138 days currently august 20th ’ll use our calculations giving us 100 equates 72% through schedule (spent / total days) multiply amount points 181 completed work only 165 point means 16 points schedule that’s ! there’s still more with information want know anticipated completion continue they have instead subtracting pv from ev divide (181 165) gives 1098 variance indicates 98% slower than dictates assuming trends continue variance order figure out date * 1098 152 days 30th (sounds spooky!)what does mean well nothing its own single measurement while important isn’t worth panicking over really care about maybe work same (which would indicate respecting wip limits) shouldn’t run into perform end/start each sprint one way deal give 50% credit stories when they’re started then 100% completed prefer 0% field because halfcompleted unshippable therefore anythingthis ’ve course went certification couple weeks later feel strongly about used excuse studying hard exam reinforce learnings",
    "test" : "test"
  },{
    "url" : "/posts/2017/simplicity/",
    "title" : "Simplicity",
    "text" : "simplicity agile manifesto created 2001 philosophy improving way software developed by 17 authors become wildly popular development ecosystem ’ve heard scrum kanban those are implementations agile also agreed 12 principles this article will focus favorite one simplicity simplicity– art maximizing amount work done– essential while can understood directly like what’s said look reverse … minimizing being done… doesn’t mean less means fewer things concurrently one feature until ’s done order that piece done far down want go adhering principle both provide advantages remove pitfallsspend time what most valuablescrum kanban have concept product backlog ordered list all pieces features related single product nature cannot situation where two equal priority priority determined delivering higher value backlog than lower value working something other top item inherently implementing work focusing only item backlog ’re spending your highest work which definition best use time don’t know ’ll need standish group study (known chaos report) presented xp2002 conference jim johnson found 64% delivered were never rarely used weren’t implemented well should been all even through customer’s experience using product might longer needed used indicated value waste much context now later indicator always had growth developer back code from 6 months prior laugh about how poor would smile shake head decisions techniques pastryan used while patting because presentryan knew better addition making better started now with customers valuable context learn more needs they system delaying implementation later allow profit understanding make decisions’re delivery coupling featuresagile focuses iterative approach development advantage here deliver iteration after get feedback shorter feedback loop pivot change direction project customer really needs feature release feature take complete instead increase speed into hands keeping simple following principle produce quicker smarter when producing subsequent less effort",
    "test" : "test"
  },{
    "url" : "/posts/2018/problems-not-solutions/",
    "title" : "Problems Not Solutions",
    "text" : "problems solutions ’ve been operating product owner last 4 months still have lot learn this role post meant share recent experience help collect thoughts give readers some insight into thoughts web portal which allows customers view their bills pay utility usage much more one our negotiations with sales team requested ability link other accounts any login thought through ask were able provide range options varying fidelity next day guy told that he relayed preferred option customer they mentioned concerned about email notificationsthis triggered questions from :“what kind email are asking sent linkee account holder authorization maybe just notification linkee” got meeting set could relay solution more detail try get answer these questions surprised related ebill ready notifications out linked login holder did digging why important them occupant house skips bill without paying property held responsible paying debt need owners way keep eye balance owing properties wasn’t expecting line thought asked few probing thanked them information understand needs ’ll reach soon after time discuss possible teamthis example shouldn’t surprise anyone piece functionality because see problem reason behind ask might implemented feature rather than working different would better job addressing underlying problemby deeper both win business problem ensure works best system now retrospection how dealt situation better had reached when heard new request saved discussions right bat instead spent discussing linking understanding there something else ’m missing your two cents",
    "test" : "test"
  },{
    "url" : "/posts/2018/coping-with-externalized-dependencies/",
    "title" : "Coping with externalized dependencies",
    "text" : "coping with externalized dependencies our department took step back agilitywise last month have been building customer portal while doing ’ve also out restful business layer serve needs functionality into needed provide need portal couple months ago started talking about creating new team that will focused nothing layer benefit would more attention paid beyond just what other teams from licensing integrations drawback they are expected only work this area pulled trigger month ago formed teamsince left bunch features built atop rest endpoints haven’t developed yet without control over their schedule ’ve negotiating best can think push portal project forecast too far forward talked through today come strategy deal short term figure better way forward haven summarized communicated email: hi allkevin dung ian had conversation today how want handle external team plan some problems than current system nothing first background language ’ll using:when refer splitting story either horizontally vertically referring following: horizontal split involves tier software stack example ui level middle tier database integration these splits always require stubbed test data order move forward removes actual implementation endend vertical subset acceptance criteria original story two (1 – add phone number page 2 ensure format validated) can vertically each becoming its’ own storyhorizontal good agile perspective because longer produces any real value customervertical allow incremental delivered providing customer backlog grooming often involve coming ways complex stories simpler storiesmoving ever run situation where there case within feel needs marked deferred due being limited by dependency ( example endpoint available yet) should “horizontally”once create story must immediately existing “deferred” cases leaving behind link case’s home prevent falling cracks missed still figured solution ideas dealing discuss department:add members (this double down strategy)take spread amongst undermine strategy)descope layerheavy upcoming release might possible commitments) ideas let know! ’d love hear themcheersrg!",
    "test" : "test"
  },{
    "url" : "/posts/2019/end-meetings-and-appointments-early/",
    "title" : "End meetings and appointments early",
    "text" : "end meetings appointments early these days have lot meetings fact butt against one another meaning that overflow from meeting next steamrolls rest day can start with 5 minute overrun first which ends compounding extra 45 minutes by day sometimes ’ll try eating lunch make time way then being less engagedanother problem ’ve noticed running next don’t take reflect what discussed action items away this manifesting either missing addition list brain built create process solve puzzles maintain integrity ephemeral list done research having more effective thing stuck out discussions will expand fill whatever allocated that studies shown very limited timeframe actually spur creativity than long sprawling ones favour here most are own myself since work office 365 always bothered defaulted 30 60 increments default knew there had way situation found ’s available right through outlook 365’s calendar options find setting click file &amp;gt; options select ‘calendar’ grouping left sidebar option ‘end early’ provides 2 settings ( meetings) allow set appropriate thresholdsafter making change all been changed provide ability meeting log any new list meeting hope functionality could useful myself",
    "test" : "test"
  },{
    "url" : "/posts/2020/thoughts-about-ssgs/",
    "title" : "Thoughts about SSGs",
    "text" : "thoughts about ssgs had been meaning overhaul wordpress website while now felt like didn&#39;t give deep enough control over look feel layout without dumping bunch time into customizing themes spent there wouldn&#39;t help gain deeper understanding technologies overall rather information how does things hearing lot static site generators decided might worth learning what they&#39;re all aboutthis first &#39;ve done few years selected 11ty generator framework choice heard jekyll another popular option that leveraged by github pages learned general benefits are primarily speed cost end user idea websites these days bloated with tons javascript both terms download size well processing/rendering power running all this occurs user&#39;s device when they access your site most world browsing web their cellphones days kind thing matterswith work handled compile which results raw html css output one note however &#39;s easy lose benefit since there&#39;s nothing actually stops from including ton dynamic javascript still have try keep lowcostanother found pairing other services company called netlify can automatically pull repository stores ssg code build host free&#39;m using service now website very straightforward get working together last encourages learn more tech stuff workout support frameworks libraries angular nodejs manage functionality packaging behalf great opportunity remove training wheels order accomplish those same tasks myself downsides compared cms takes loooong go new beautiful things boasts quick generate website true only useful far want 1995 geocities fanring looking &#39;m sure nostalgia market that people would recommend generator depends geek out some basic html css good choice full look feel expand own custom built stuff wysiwyg helper stay away something looks shortly after starting awaycheersrg!",
    "test" : "test"
  }]}